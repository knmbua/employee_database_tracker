{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,eAAe,CAAC;AAEvB,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAE1E,IAAI,WAAW,GAAG,KAAK,CAAC;AAExB,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,UAAU,GAAG,MAAM,WAAW,EAAE,CAAC;IACvC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;QAC7D;YACI,OAAO,EAAE,wBAAwB;YACjC,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChC,OAAO;oBACH,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,eAAe,GAAG;oBACrD,KAAK,EAAE,OAAO,CAAC,EAAE;iBACpB,CAAA;YACL,CAAC,CAAC;SACL;QACD;YACI,OAAO,EAAE,sBAAsB;YAC/B,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,OAAO;SAChB;QACD;YACI,OAAO,EAAE,qBAAqB;YAC9B,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,OAAO;SAChB;KACJ,CAAC,CAAC;IAEH,MAAM,cAAc,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC5C,MAAM,gBAAgB,EAAE,CAAC,CAAC,+CAA+C;AAC7E,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB;IAClC,MAAM,iBAAiB,GAAG,MAAM,eAAe,EAAE,CAAC;IAClD,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACrC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ;IAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,8DAA8D,CAAC,CAAC;QAC5E,WAAW,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;QAC7C,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE;YACL;gBACI,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,gBAAgB;aAC1B;YACD;gBACI,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,WAAW;aACrB;YACD;gBACI,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,CAAC;aACX;SACJ;KACJ,CAAC,CAAC;IAEH,IAAI,cAAc,KAAK,CAAC,EAAE,CAAC;QACvB,MAAM,cAAc,EAAE,CAAC;QACvB,QAAQ,EAAE,CAAC;IACf,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,wBAAwB;IAC7C,CAAC;AACL,CAAC","sourcesContent":["import inquirer from 'inquirer';\r\nimport 'console.table';\r\n\r\nimport { getAllRoles, getAllEmployees, createEmployee } from './query.js';\r\n\r\nlet showWelcome = false;\r\n\r\nexport async function addEmployee() {\r\n    const rolesArray = await getAllRoles();\r\n    const { role_id, first_name, last_name } = await inquirer.prompt([\r\n        {\r\n            message: 'Please select the role',\r\n            name: 'role_id',\r\n            type: 'list',\r\n            choices: rolesArray.map((roleObj) => {\r\n                return {\r\n                    name: `${roleObj.title} (${roleObj.department_name})`,\r\n                    value: roleObj.id\r\n                }\r\n            })\r\n        },\r\n        {\r\n            message: 'Enter the first name',\r\n            name: 'first_name',\r\n            type: 'input'\r\n        },\r\n        {\r\n            message: 'Enter the last name',\r\n            name: 'last_name',\r\n            type: 'input'\r\n        }\r\n    ]);\r\n\r\n    await createEmployee(role_id, first_name, last_name);\r\n    console.log('Employee added successfully!');\r\n    await showAllEmployees(); // Display all employees after adding a new one\r\n}\r\n\r\nexport async function showAllEmployees() {\r\n    const employeeRowsArray = await getAllEmployees();\r\n    console.table(employeeRowsArray);\r\n}\r\n\r\nexport async function showMenu() {\r\n    if (!showWelcome) {\r\n        console.log('\\n ------ Welcome to the Employee Database Tracker! ------\\n');\r\n        showWelcome = true;\r\n    }\r\n\r\n    const { optionFunction } = await inquirer.prompt({\r\n        message: 'Please select an option',\r\n        name: 'optionFunction',\r\n        type: 'list',\r\n        choices: [\r\n            {\r\n                name: 'Show All Employees',\r\n                value: showAllEmployees\r\n            },\r\n            {\r\n                name: 'Add Employee',\r\n                value: addEmployee\r\n            },\r\n            {\r\n                name: 'Quit',\r\n                value: 0\r\n            }\r\n        ]\r\n    });\r\n\r\n    if (optionFunction !== 0) {\r\n        await optionFunction();\r\n        showMenu();\r\n    } else {\r\n        console.log('Goodbye!');\r\n        process.exit(0); // Terminate the process\r\n    }\r\n}"]}